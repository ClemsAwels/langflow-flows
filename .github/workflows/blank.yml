name: Manage Langflow Flows

on:
  push:
    branches:
      - main

jobs:
  detect_changes:
    runs-on: self-hosted
    outputs:
      added: ${{ steps.changed_files.outputs.added }}
      modified: ${{ steps.changed_files.outputs.modified }}
      deleted: ${{ steps.changed_files.outputs.deleted }}
      flows_added: ${{ steps.changed_files.outputs.flows_added }}
      flows_modified: ${{ steps.changed_files.outputs.flows_modified }}
      flows_deleted: ${{ steps.changed_files.outputs.flows_deleted }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Detect file changes (A/M/D)
        id: changed_files
        run: |
          echo "üîç Detecting file changes..."

          CHANGES=$(git diff --name-status ${{ github.event.before }} ${{ github.sha }})
          echo "$CHANGES"

          ADDED=$(echo "$CHANGES" | awk '$1 == "A" {print $2}')
          MODIFIED=$(echo "$CHANGES" | awk '$1 == "M" {print $2}')
          DELETED=$(echo "$CHANGES" | awk '$1 == "D" {print $2}')

          FLOWS_ADDED=$(echo "$ADDED" | grep '^flows/' || true)
          FLOWS_MODIFIED=$(echo "$MODIFIED" | grep '^flows/' || true)
          FLOWS_DELETED=$(echo "$DELETED" | grep '^flows/' || true)

          escape() {
            echo "$1" | sed ':a;N;$!ba;s/\n/\\n/g'
          }

          {
            echo "added=$(escape "$ADDED")"
            echo "modified=$(escape "$MODIFIED")"
            echo "deleted=$(escape "$DELETED")"
            echo "flows_added=$(escape "$FLOWS_ADDED")"
            echo "flows_modified=$(escape "$FLOWS_MODIFIED")"
            echo "flows_deleted=$(escape "$FLOWS_DELETED")"
          } >> "$GITHUB_OUTPUT"

      - name: Debug outputs
        run: |
          echo "Added: ${{ steps.changed_files.outputs.added }}"
          echo "Modified: ${{ steps.changed_files.outputs.modified }}"
          echo "Deleted: ${{ steps.changed_files.outputs.deleted }}"
          echo "Flows - Added: ${{ steps.changed_files.outputs.flows_added }}"
          echo "Flows - Modified: ${{ steps.changed_files.outputs.flows_modified }}"
          echo "Flows - Deleted: ${{ steps.changed_files.outputs.flows_deleted }}"

      - name: Send new flows to API
        if: steps.changed_files.outputs.flows_added != ''
        run: |
          echo "üì° Sending added flows to Langflow API..."

          echo "${{ steps.changed_files.outputs.flows_added }}" | tr '\\n' '\n' > flows_to_send.txt

          while IFS= read -r file; do
            if [ -f "$file" ]; then
              echo "‚û°Ô∏è Sending $file"
              curl -X POST "http://localhost:7860/api/v1/flows/" \
                -H "accept: application/json" \
                -H "Content-Type: application/json" \
                --data-binary "@$file"
            else
              echo "‚ö†Ô∏è File not found: $file"
            fi
          done < flows_to_send.txt
